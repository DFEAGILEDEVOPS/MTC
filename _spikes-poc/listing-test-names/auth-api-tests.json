{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 3,
  "numPassedTests": 27,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 27,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1600957545356,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "logger class"
          ],
          "failureMessages": [],
          "fullName": "logger class can initialise",
          "location": null,
          "status": "passed",
          "title": "can initialise"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #log function",
          "location": null,
          "status": "passed",
          "title": "a #log function"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #alert function",
          "location": null,
          "status": "passed",
          "title": "a #alert function"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #error function",
          "location": null,
          "status": "passed",
          "title": "a #error function"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #warn function",
          "location": null,
          "status": "passed",
          "title": "a #warn function"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #info function",
          "location": null,
          "status": "passed",
          "title": "a #info function"
        },
        {
          "ancestorTitles": [
            "logger class",
            "has"
          ],
          "failureMessages": [],
          "fullName": "logger class has a #debug function",
          "location": null,
          "status": "passed",
          "title": "a #debug function"
        }
      ],
      "endTime": 1600957552047,
      "message": "",
      "name": "/Users/guyharwood/dev/MTC/pupil-api/src/services/log.service.spec.ts",
      "startTime": 1600957546024,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service should be defined",
          "location": null,
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service it should call redis:get with correct key format",
          "location": null,
          "status": "passed",
          "title": "it should call redis:get with correct key format"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service an error should be thrown if either argument is an empty string",
          "location": null,
          "status": "passed",
          "title": "an error should be thrown if either argument is an empty string"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service the check payload should be returned if item found in cache and the pin is valid",
          "location": null,
          "status": "passed",
          "title": "the check payload should be returned if item found in cache and the pin is valid"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service authorisation is denied if the pin is not yet valid",
          "location": null,
          "status": "passed",
          "title": "authorisation is denied if the pin is not yet valid"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service authorisation is denied if the pin was valid in the past",
          "location": null,
          "status": "passed",
          "title": "authorisation is denied if the pin was valid in the past"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service null should be returned if item not found in cache",
          "location": null,
          "status": "passed",
          "title": "null should be returned if item not found in cache"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service redis item TTL should be set to 30 minutes from now if config.practice is defined and false",
          "location": null,
          "status": "passed",
          "title": "redis item TTL should be set to 30 minutes from now if config.practice is defined and false"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service no redis expiry is set if config.practice is true",
          "location": null,
          "status": "passed",
          "title": "no redis expiry is set if config.practice is true"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service no redis expiry is set if config.practice does not exist",
          "location": null,
          "status": "passed",
          "title": "no redis expiry is set if config.practice does not exist"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service no redis expiry is set if config.practice is undefined",
          "location": null,
          "status": "passed",
          "title": "no redis expiry is set if config.practice is undefined"
        },
        {
          "ancestorTitles": [
            "redis-pupil-auth.service"
          ],
          "failureMessages": [],
          "fullName": "redis-pupil-auth.service pupil-login message should be dispatched upon successful authentication",
          "location": null,
          "status": "passed",
          "title": "pupil-login message should be dispatched upon successful authentication"
        }
      ],
      "endTime": 1600957554028,
      "message": "",
      "name": "/Users/guyharwood/dev/MTC/pupil-api/src/services/redis-pupil-auth.service.spec.ts",
      "startTime": 1600957546024,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller returns an 400 error if the request is not JSON",
          "location": null,
          "status": "passed",
          "title": "returns an 400 error if the request is not JSON"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller allows a content-type of application/json",
          "location": null,
          "status": "passed",
          "title": "allows a content-type of application/json"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller allows a content-type of application/json with a charset",
          "location": null,
          "status": "passed",
          "title": "allows a content-type of application/json with a charset"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller returns unauthorised if the login failed",
          "location": null,
          "status": "passed",
          "title": "returns unauthorised if the login failed"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller shortcuts to return unauthorised if no schoolPin provided",
          "location": null,
          "status": "passed",
          "title": "shortcuts to return unauthorised if no schoolPin provided"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller shortcuts to return unauthorised if no pupilPin provided",
          "location": null,
          "status": "passed",
          "title": "shortcuts to return unauthorised if no pupilPin provided"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller returns a data packet to the client if authorisation is successful",
          "location": null,
          "status": "passed",
          "title": "returns a data packet to the client if authorisation is successful"
        },
        {
          "ancestorTitles": [
            "redis auth controller"
          ],
          "failureMessages": [],
          "fullName": "redis auth controller returns a 401 if no redis preparedCheck found",
          "location": null,
          "status": "passed",
          "title": "returns a 401 if no redis preparedCheck found"
        }
      ],
      "endTime": 1600957554332,
      "message": "",
      "name": "/Users/guyharwood/dev/MTC/pupil-api/src/controllers/redis.auth.controller.spec.ts",
      "startTime": 1600957546024,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
