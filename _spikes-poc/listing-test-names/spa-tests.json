{
  "browsers": {
    "17626560": {
      "id": "17626560",
      "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
      "name": "Chrome 85.0.4183 (Mac OS X 10.15.7)",
      "state": "CONNECTED",
      "lastResult": {
        "startTime": 1601033831468,
        "total": 366,
        "success": 362,
        "failed": 0,
        "skipped": 4,
        "totalTime": 2403,
        "netTime": 2307,
        "error": false,
        "disconnected": false
      },
      "disconnectsCount": 0,
      "noActivityTimeout": 30000,
      "disconnectDelay": 2000
    }
  },
  "result": {
    "tests": [
      {
        "fullName": "AAColoursComponent should load the component",
        "description": "should load the component",
        "id": "spec0",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAColoursComponent"
        ],
        "time": 74,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAColoursComponent should redirect to the access-settings page on click if the user has navigated from access-settings",
        "description": "should redirect to the access-settings page on click if the user has navigated from access-settings",
        "id": "spec1",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAColoursComponent"
        ],
        "time": 36,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAColoursComponent should redirect to the sign-in-success page on click if the user has not navigated from access-settings",
        "description": "should redirect to the sign-in-success page on click if the user has not navigated from access-settings",
        "id": "spec2",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAColoursComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAColoursComponent should redirect to the sign-in-success page on click if previous url is undefined",
        "description": "should redirect to the sign-in-success page on click if previous url is undefined",
        "id": "spec3",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAColoursComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAColoursComponent should store pupil prefs when navigating away",
        "description": "should store pupil prefs when navigating away",
        "id": "spec4",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAColoursComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAFontsComponent should load the component",
        "description": "should load the component",
        "id": "spec5",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAFontsComponent"
        ],
        "time": 38,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAFontsComponent should redirect to colour contrast when enabled",
        "description": "should redirect to colour contrast when enabled",
        "id": "spec6",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAFontsComponent"
        ],
        "time": 13,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAFontsComponent should redirect to the welcome page when colour contrast not enabled",
        "description": "should redirect to the welcome page when colour contrast not enabled",
        "id": "spec7",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAFontsComponent"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AAFontsComponent should store pupil prefs when navigating away",
        "description": "should store pupil prefs when navigating away",
        "id": "spec8",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AAFontsComponent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AASettingsComponent With input assistant disabled should create",
        "description": "should create",
        "id": "spec9",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant disabled"
        ],
        "time": 28,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AASettingsComponent With input assistant disabled should redirect to warm up introduction page",
        "description": "should redirect to warm up introduction page",
        "id": "spec10",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant disabled"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AASettingsComponent With input assistant enabled and when check type is live should have empty form data",
        "description": "should have empty form data",
        "id": "spec11",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant enabled",
          "and when check type is live"
        ],
        "time": 20,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "AASettingsComponent With input assistant enabled and when check type is live should redirect to the sign-in-success page on successful submission",
        "description": "should redirect to the sign-in-success page on successful submission",
        "id": "spec12",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant enabled",
          "and when check type is live"
        ],
        "time": 11,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "AASettingsComponent With input assistant enabled and when check type is live should not redirect to the sign-in-success when a disallowed special character(exclamation) is detected",
        "description": "should not redirect to the sign-in-success when a disallowed special character(exclamation) is detected",
        "id": "spec13",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant enabled",
          "and when check type is live"
        ],
        "time": 13,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "AASettingsComponent With input assistant enabled and when check type is live should not redirect to the sign-in-success when a disallowed special character(double quotes) is detected",
        "description": "should not redirect to the sign-in-success when a disallowed special character(double quotes) is detected",
        "id": "spec14",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant enabled",
          "and when check type is live"
        ],
        "time": 8,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "AASettingsComponent With input assistant enabled and when check type is familiarisation should not call storageService setPupil method when practice mode is switched on",
        "description": "should not call storageService setPupil method when practice mode is switched on",
        "id": "spec15",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AASettingsComponent",
          "With input assistant enabled",
          "and when check type is familiarisation"
        ],
        "time": 10,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "AccessibilityStatementComponent should create",
        "description": "should create",
        "id": "spec16",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AccessibilityStatementComponent"
        ],
        "time": 38,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppComponent should create the app",
        "description": "should create the app",
        "id": "spec17",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppComponent"
        ],
        "time": 70,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "BreadcrumbsComponent should create",
        "description": "should create",
        "id": "spec18",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "BreadcrumbsComponent"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckCompleteComponent should be created",
        "description": "should be created",
        "id": "spec19",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckCompleteComponent onClickStartAgain should clear the storageService state and redirect to the check start page",
        "description": "should clear the storageService state and redirect to the check start page",
        "id": "spec20",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteComponent",
          "onClickStartAgain"
        ],
        "time": 8,
        "executedExpectationsCount": 9
      },
      {
        "fullName": "CheckComponent should be created",
        "description": "should be created",
        "id": "spec21",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent"
        ],
        "time": 19,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent default view should be the warmup-intro screen",
        "description": "default view should be the warmup-intro screen",
        "id": "spec22",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent setting the viewState to question shows the question screen",
        "description": "setting the viewState to question shows the question screen",
        "id": "spec23",
        "log": [],
        "skipped": true,
        "disabled": false,
        "pending": true,
        "success": true,
        "suite": [
          "CheckComponent"
        ],
        "time": 0,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "CheckComponent setting the viewState to complete shows the check complete screen",
        "description": "setting the viewState to complete shows the check complete screen",
        "id": "spec24",
        "log": [],
        "skipped": true,
        "disabled": false,
        "pending": true,
        "success": true,
        "suite": [
          "CheckComponent"
        ],
        "time": 0,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "CheckComponent manualSubmitHandler calls changeState()",
        "description": "calls changeState()",
        "id": "spec25",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "manualSubmitHandler"
        ],
        "time": 9,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent questionTimeoutHandler() calls changeState()",
        "description": "calls changeState()",
        "id": "spec26",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "questionTimeoutHandler()"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent loadingTimeoutHandler increments the state",
        "description": "increments the state",
        "id": "spec27",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "loadingTimeoutHandler"
        ],
        "time": 9,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent handleKeyboardEvent cancels (nearly) all keyboard events and returns false",
        "description": "cancels (nearly) all keyboard events and returns false",
        "id": "spec28",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "handleKeyboardEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 7
      },
      {
        "fullName": "CheckComponent handleKeyboardEvent allows tab and enter keys for AX keyboard navigation",
        "description": "allows tab and enter keys for AX keyboard navigation",
        "id": "spec29",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "CheckComponent handleTouchEvent cancels touchend events and returns false",
        "description": "cancels touchend events and returns false",
        "id": "spec30",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "handleTouchEvent"
        ],
        "time": 8,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "CheckComponent warmup click handlers changes state for warmupIntroClickHandler()",
        "description": "changes state for warmupIntroClickHandler()",
        "id": "spec31",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "warmup click handlers"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent warmup click handlers changes state for warmupCompleteClickHandler()",
        "description": "changes state for warmupCompleteClickHandler()",
        "id": "spec32",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "warmup click handlers"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the warmup-intro when the state is \"warmup-intro\"",
        "description": "shows the warmup-intro when the state is \"warmup-intro\"",
        "id": "spec33",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the warmup loading screen when the state is \"LW<digit>\"",
        "description": "shows the warmup loading screen when the state is \"LW<digit>\"",
        "id": "spec34",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the practice question when the state is \"W<digit>\"",
        "description": "shows the practice question when the state is \"W<digit>\"",
        "id": "spec35",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 8,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the warmup complete when the state is \"warmup-complete\"",
        "description": "shows the warmup complete when the state is \"warmup-complete\"",
        "id": "spec36",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the loading page when the state is \"L<digit>\"",
        "description": "shows the loading page when the state is \"L<digit>\"",
        "id": "spec37",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the question when the state is \"Q<digit>\"",
        "description": "shows the question when the state is \"Q<digit>\"",
        "id": "spec38",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 9,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent changeState() shows the submission pending screen when the state is \"submission-pending\"",
        "description": "shows the submission pending screen when the state is \"submission-pending\"",
        "id": "spec39",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "changeState()"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent check complete state is adding an audit entry for checkComplete",
        "description": "is adding an audit entry for checkComplete",
        "id": "spec40",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "check complete state"
        ],
        "time": 7,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "CheckComponent page refresh calls refreshDetected during init when the checkstate is found",
        "description": "calls refreshDetected during init when the checkstate is found",
        "id": "spec41",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh logs an audit entry to say the page was refreshed",
        "description": "logs an audit entry to say the page was refreshed",
        "id": "spec42",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent page refresh moves to the next state if a real test question was asked",
        "description": "moves to the next state if a real test question was asked",
        "id": "spec43",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state stays the same if a page refresh happens on a warmup loading screen",
        "description": "state stays the same if a page refresh happens on a warmup loading screen",
        "id": "spec44",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state moves on if a page refresh happens on a warmup question",
        "description": "state moves on if a page refresh happens on a warmup question",
        "id": "spec45",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state stays the same if a page refresh happens on the warm-up intro",
        "description": "state stays the same if a page refresh happens on the warm-up intro",
        "id": "spec46",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state stays the same if a page refresh happens on the warm-up complete",
        "description": "state stays the same if a page refresh happens on the warm-up complete",
        "id": "spec47",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state stays the same if a page refresh happens on a loading screen",
        "description": "state stays the same if a page refresh happens on a loading screen",
        "id": "spec48",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh state stays the same if a page refresh happens on the submission pending screen",
        "description": "state stays the same if a page refresh happens on the submission pending screen",
        "id": "spec49",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh the answer is recorded as blank when refreshing during on a question",
        "description": "the answer is recorded as blank when refreshing during on a question",
        "id": "spec50",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 9,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckComponent page refresh throws an error when the existing state is an out of range number",
        "description": "throws an error when the existing state is an out of range number",
        "id": "spec51",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh throws an error when the existing state is a negative number",
        "description": "throws an error when the existing state is a negative number",
        "id": "spec52",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh throws an error when the existing state is a string",
        "description": "throws an error when the existing state is a string",
        "id": "spec53",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh throws an error when the existing state is a bool",
        "description": "throws an error when the existing state is a bool",
        "id": "spec54",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh canDeactivate can deactivate on warmup intro view state",
        "description": "can deactivate on warmup intro view state",
        "id": "spec55",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh",
          "canDeactivate"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh canDeactivate can deactivate on submission pending view state",
        "description": "can deactivate on submission pending view state",
        "id": "spec56",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh",
          "canDeactivate"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh canDeactivate can deactivate on preload view state to allow out of time rendering",
        "description": "can deactivate on preload view state to allow out of time rendering",
        "id": "spec57",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh",
          "canDeactivate"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh canDeactivate can deactivate on submission pending view state",
        "description": "can deactivate on submission pending view state",
        "id": "spec58",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh",
          "canDeactivate"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckComponent page refresh canDeactivate cannot deactivate on any other state",
        "description": "cannot deactivate on any other state",
        "id": "spec59",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckComponent",
          "page refresh",
          "canDeactivate"
        ],
        "time": 8,
        "executedExpectationsCount": 6
      },
      {
        "fullName": "ConnectivityCheckGuard should instantiate",
        "description": "should instantiate",
        "id": "spec60",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckGuard"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityCheckGuard when the connectivity check enabled flag is enabled should redirect to connectivity check page",
        "description": "should redirect to connectivity check page",
        "id": "spec61",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckGuard",
          "when the connectivity check enabled flag is enabled"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "ConnectivityCheckGuard when the connectivity check enabled flag is disabled should redirect to sign in page",
        "description": "should redirect to sign in page",
        "id": "spec62",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckGuard",
          "when the connectivity check enabled flag is disabled"
        ],
        "time": 0,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "ConnectivityCheckComponent should create",
        "description": "should create",
        "id": "spec63",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckComponent"
        ],
        "time": 94,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityCheckComponent ngOnInit should navigate to check path with query params if an unfinished check is detected",
        "description": "should navigate to check path with query params if an unfinished check is detected",
        "id": "spec64",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckComponent",
          "ngOnInit"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityCheckComponent ngOnInit should not navigate to check path if a completed check is detected",
        "description": "should not navigate to check path if a completed check is detected",
        "id": "spec65",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckComponent",
          "ngOnInit"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityCheckComponent ngOnInit should navigate to sign in view if connectivity Check succeeded",
        "description": "should navigate to sign in view if connectivity Check succeeded",
        "id": "spec66",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckComponent",
          "ngOnInit"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityCheckComponent ngOnInit should navigate to connectivity error view if connectivity Check fails",
        "description": "should navigate to connectivity error view if connectivity Check fails",
        "id": "spec67",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityCheckComponent",
          "ngOnInit"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityErrorComponent should create",
        "description": "should create",
        "id": "spec68",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityErrorComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ContactComponent should create",
        "description": "should create",
        "id": "spec69",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ContactComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "error-handler should be created",
        "description": "should be created",
        "id": "spec70",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "error-handler"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "error-handler handleError calls the audit service to persist the error",
        "description": "handleError calls the audit service to persist the error",
        "id": "spec71",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "error-handler"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "error-handler handleError does not throw another error",
        "description": "handleError does not throw another error",
        "id": "spec72",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "error-handler"
        ],
        "time": 3,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "FeedbackThanksComponent should be created",
        "description": "should be created",
        "id": "spec73",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackThanksComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should be created",
        "description": "should be created",
        "id": "spec74",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 16,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should include a H1 header title",
        "description": "should include a H1 header title",
        "id": "spec75",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should include three questions",
        "description": "should include three questions",
        "id": "spec76",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 12,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "FeedbackComponent should include 4 optional answers for InputType field",
        "description": "should include 4 optional answers for InputType field",
        "id": "spec77",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "FeedbackComponent should include 5 optional answers for satisfactionRating field",
        "description": "should include 5 optional answers for satisfactionRating field",
        "id": "spec78",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 13,
        "executedExpectationsCount": 5
      },
      {
        "fullName": "FeedbackComponent should include a textarea for commentText field",
        "description": "should include a textarea for commentText field",
        "id": "spec79",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should include a submit button",
        "description": "should include a submit button",
        "id": "spec80",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should initially the submit button be disabled",
        "description": "should initially the submit button be disabled",
        "id": "spec81",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 12,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should onSelectionChange be called when clicking inputType radio button",
        "description": "should onSelectionChange be called when clicking inputType radio button",
        "id": "spec82",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should onSelectionChange be called when clicking satisfactionRate radio button",
        "description": "should onSelectionChange be called when clicking satisfactionRate radio button",
        "id": "spec83",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 12,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackComponent should onSubmit be called when clicking button and there are no errors",
        "description": "should onSubmit be called when clicking button and there are no errors",
        "id": "spec84",
        "log": [],
        "skipped": true,
        "disabled": false,
        "pending": true,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 0,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "FeedbackComponent should onSubmit NOT be called when clicking button and there are errors",
        "description": "should onSubmit NOT be called when clicking button and there are errors",
        "id": "spec85",
        "log": [],
        "skipped": true,
        "disabled": false,
        "pending": true,
        "success": true,
        "suite": [
          "FeedbackComponent"
        ],
        "time": 0,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "FooterComponent should be created",
        "description": "should be created",
        "id": "spec86",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FooterComponent"
        ],
        "time": 14,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FooterComponent should have link with text",
        "description": "should have link with text",
        "id": "spec87",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FooterComponent"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FooterComponent should have link to external copyright information",
        "description": "should have link to external copyright information",
        "id": "spec88",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FooterComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "HeaderComponent should be created",
        "description": "should be created",
        "id": "spec89",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "HeaderComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "HeaderComponent should have text next to the logo",
        "description": "should have text next to the logo",
        "id": "spec90",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "HeaderComponent"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "HeaderComponent should have a title as a link",
        "description": "should have a title as a link",
        "id": "spec91",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "HeaderComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "InstructionsComponent should be created",
        "description": "should be created",
        "id": "spec92",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "InstructionsComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "InstructionsComponent redirects to practice questions instructions page",
        "description": "redirects to practice questions instructions page",
        "id": "spec93",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "InstructionsComponent"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "InstructionsComponent audit entry adds audit entry onClick for check started",
        "description": "adds audit entry onClick for check started",
        "id": "spec94",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "InstructionsComponent",
          "audit entry"
        ],
        "time": 4,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "LoadingComponent should be created",
        "description": "should be created",
        "id": "spec95",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoadingComponent"
        ],
        "time": 13,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoadingComponent should add audit entry when loading rendered",
        "description": "should add audit entry when loading rendered",
        "id": "spec96",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoadingComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "LoginFailureComponent should be created",
        "description": "should be created",
        "id": "spec97",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginFailureComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent should be created and remove pupil data",
        "description": "should be created and remove pupil data",
        "id": "spec98",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent"
        ],
        "time": 15,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LoginSuccessComponent asks the user to confirm their details",
        "description": "asks the user to confirm their details",
        "id": "spec99",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for no access arrangements should redirect to warm up introduction page",
        "description": "should redirect to warm up introduction page",
        "id": "spec100",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for no access arrangements"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for access arrangements should redirect to the AA settings page when fontSize is enabled",
        "description": "should redirect to the AA settings page when fontSize is enabled",
        "id": "spec101",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for access arrangements"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for access arrangements should redirect to the AA settings page when audibleSounds is enabled",
        "description": "should redirect to the AA settings page when audibleSounds is enabled",
        "id": "spec102",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for access arrangements"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for access arrangements should redirect to the AA settings page when numpadRemoval is enabled",
        "description": "should redirect to the AA settings page when numpadRemoval is enabled",
        "id": "spec103",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for access arrangements"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for access arrangements should redirect to the AA settings page when questionReader is enabled",
        "description": "should redirect to the AA settings page when questionReader is enabled",
        "id": "spec104",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for access arrangements"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginSuccessComponent for access arrangements should redirect to the AA settings page when inputAssistance is enabled",
        "description": "should redirect to the AA settings page when inputAssistance is enabled",
        "id": "spec105",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginSuccessComponent",
          "for access arrangements"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent should be created",
        "description": "should be created",
        "id": "spec106",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent"
        ],
        "time": 17,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent should render schoolPin and pupil pin input boxes",
        "description": "should render schoolPin and pupil pin input boxes",
        "id": "spec107",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent"
        ],
        "time": 14,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "LoginComponent before login submission should set loginPending to false",
        "description": "should set loginPending to false",
        "id": "spec108",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "before login submission"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent during login submission should set the loginPending to true",
        "description": "should set the loginPending to true",
        "id": "spec109",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "during login submission"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent on successful login should set the loginPending to false",
        "description": "should set the loginPending to false",
        "id": "spec110",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent on successful login should initialise the QuestionService and WarmupQuestionService on login",
        "description": "should initialise the QuestionService and WarmupQuestionService on login",
        "id": "spec111",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 7,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "LoginComponent on successful login should prevent a second submit",
        "description": "should prevent a second submit",
        "id": "spec112",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 15,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LoginComponent on successful login should redirect to success page given a valid schoolPin and pupilPin",
        "description": "should redirect to success page given a valid schoolPin and pupilPin",
        "id": "spec113",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 7,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "LoginComponent on successful login should redirect to the font selection page when fontSize is enabled",
        "description": "should redirect to the font selection page when fontSize is enabled",
        "id": "spec114",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LoginComponent on successful login should redirect to the colour contrast page when colourContrast is enabled",
        "description": "should redirect to the colour contrast page when colourContrast is enabled",
        "id": "spec115",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "on successful login"
        ],
        "time": 13,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LoginComponent should fail logging in when PIN(s) are invalid changes the loginPending to be false",
        "description": "changes the loginPending to be false",
        "id": "spec116",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "should fail logging in when PIN(s) are invalid"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent should fail logging in when PIN(s) are invalid redirects to login page when the school and pupil pin credentials are rejected",
        "description": "redirects to login page when the school and pupil pin credentials are rejected",
        "id": "spec117",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "should fail logging in when PIN(s) are invalid"
        ],
        "time": 10,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LoginComponent redirects to sign in fail page when there is no connection redirects to an error page when the connection fails",
        "description": "redirects to an error page when the connection fails",
        "id": "spec118",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "redirects to sign in fail page when there is no connection"
        ],
        "time": 7,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "LoginComponent ngOnInit should set the loginPending to false",
        "description": "should set the loginPending to false",
        "id": "spec119",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "ngOnInit"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent ngOnInit should navigate to check path with query params if an unfinished check is detected",
        "description": "should navigate to check path with query params if an unfinished check is detected",
        "id": "spec120",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "ngOnInit"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginComponent ngOnInit should not navigate to check path if a completed check is detected",
        "description": "should not navigate to check path if a completed check is detected",
        "id": "spec121",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginComponent",
          "ngOnInit"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LogoutComponent should be created",
        "description": "should be created",
        "id": "spec122",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LogoutComponent"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LogoutComponent should have signed out of the user service",
        "description": "should have signed out of the user service",
        "id": "spec123",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LogoutComponent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "LogoutComponent should navigate to the sign-in page",
        "description": "should navigate to the sign-in page",
        "id": "spec124",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LogoutComponent"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "OutOfTimeComponent should be created",
        "description": "should be created",
        "id": "spec125",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "OutOfTimeComponent"
        ],
        "time": 15,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "OutOfTimeComponent should logout the user",
        "description": "should logout the user",
        "id": "spec126",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "OutOfTimeComponent"
        ],
        "time": 4,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PageModificationsComponent should create",
        "description": "should create",
        "id": "spec127",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageModificationsComponent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageModificationsComponent should set the font-size",
        "description": "should set the font-size",
        "id": "spec128",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageModificationsComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageVisibility should create",
        "description": "should create",
        "id": "spec129",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageVisibility"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageVisibility #unloadNotification should call auditService addEntry when check state is not detected",
        "description": "should call auditService addEntry when check state is not detected",
        "id": "spec130",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageVisibility",
          "#unloadNotification"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageVisibility #unloadNotification should not call auditService addEntry when check state is detected",
        "description": "should not call auditService addEntry when check state is detected",
        "id": "spec131",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageVisibility",
          "#unloadNotification"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageVisibility #visibilityChange should call auditService addEntry with AppHidden as audit entry if visibility is visible",
        "description": "should call auditService addEntry with AppHidden as audit entry if visibility is visible",
        "id": "spec132",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageVisibility",
          "#visibilityChange"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PageVisibility #visibilityChange should call auditService addEntry with AppHidden as audit entry if visibility is hidden",
        "description": "should call auditService addEntry with AppHidden as audit entry if visibility is hidden",
        "id": "spec133",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PageVisibility",
          "#visibilityChange"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent should create",
        "description": "should create",
        "id": "spec134",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent"
        ],
        "time": 16,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent initialises the remaining time",
        "description": "initialises the remaining time",
        "id": "spec135",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent"
        ],
        "time": 28,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent starts the timers",
        "description": "starts the timers",
        "id": "spec136",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PractiseQuestionComponent hasAnswer returns true for a proper answer",
        "description": "returns true for a proper answer",
        "id": "spec137",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "hasAnswer"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent hasAnswer returns false for an empty answer",
        "description": "returns false for an empty answer",
        "id": "spec138",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "hasAnswer"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent hasStartedAnswering returns false before input was added",
        "description": "returns false before input was added",
        "id": "spec139",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "hasStartedAnswering"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent hasStartedAnswering returns true after input was added",
        "description": "returns true after input was added",
        "id": "spec140",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "hasStartedAnswering"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent hasStartedAnswering returns true after input was added and deleted",
        "description": "returns true after input was added and deleted",
        "id": "spec141",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "hasStartedAnswering"
        ],
        "time": 13,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onClickAnswer adds the input to the answer if there is room",
        "description": "adds the input to the answer if there is room",
        "id": "spec142",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onClickAnswer"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onClickAnswer does not add the input to the answer if the answer is 5 chars long",
        "description": "does not add the input to the answer if the answer is 5 chars long",
        "id": "spec143",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onClickAnswer"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onClickAnswer does not add input to the answer if enter has been clicked",
        "description": "does not add input to the answer if enter has been clicked",
        "id": "spec144",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onClickAnswer"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onClickBackspace deletes the end character from the answer",
        "description": "deletes the end character from the answer",
        "id": "spec145",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onClickBackspace"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onClickBackspace behaves when the answer is empty",
        "description": "behaves when the answer is empty",
        "id": "spec146",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onClickBackspace"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onSubmit emits the answer",
        "description": "emits the answer",
        "id": "spec147",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onSubmit"
        ],
        "time": 12,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onSubmit only allows submit to happen once",
        "description": "only allows submit to happen once",
        "id": "spec148",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onSubmit"
        ],
        "time": 12,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent onSubmit returns false if the answer is too short",
        "description": "returns false if the answer is too short",
        "id": "spec149",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "onSubmit"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent sendTimeoutEvent emits the answer",
        "description": "emits the answer",
        "id": "spec150",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "sendTimeoutEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent sendTimeoutEvent returns false for a duplicate timeout event",
        "description": "returns false for a duplicate timeout event",
        "id": "spec151",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "sendTimeoutEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent adds to the answer when a number is given",
        "description": "adds to the answer when a number is given",
        "id": "spec152",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent does not add to the answer after submission",
        "description": "does not add to the answer after submission",
        "id": "spec153",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent does not register key strokes for warm up questions",
        "description": "does not register key strokes for warm up questions",
        "id": "spec154",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing Backspace or Delete",
        "description": "keyboard calls deleteChar when pressing Backspace or Delete",
        "id": "spec155",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 11,
        "executedExpectationsCount": 5
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing \"Del\"",
        "description": "keyboard calls deleteChar when pressing \"Del\"",
        "id": "spec156",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent keyboard calls OnSubmit() when Enter is pressed (if there is an answer)",
        "description": "keyboard calls OnSubmit() when Enter is pressed (if there is an answer)",
        "id": "spec157",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PractiseQuestionComponent handleKeyboardEvent keyboard accepts numbers",
        "description": "keyboard accepts numbers",
        "id": "spec158",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 7,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PractiseQuestionComponent preSendTimeoutEvent should play the end of question sound",
        "description": "should play the end of question sound",
        "id": "spec159",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "preSendTimeoutEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PractiseQuestionComponent preSendTimeoutEvent should play the end of question sound after speech ends",
        "description": "should play the end of question sound after speech ends",
        "id": "spec160",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PractiseQuestionComponent",
          "preSendTimeoutEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PrivacyComponent should create",
        "description": "should create",
        "id": "spec161",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PrivacyComponent"
        ],
        "time": 24,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent should be created",
        "description": "should be created",
        "id": "spec162",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent"
        ],
        "time": 19,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent handleMouseEvent tracks mousedown events",
        "description": "tracks mousedown events",
        "id": "spec163",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleMouseEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent handleMouseEvent does not register additional mouse events if enter has been clicked",
        "description": "does not register additional mouse events if enter has been clicked",
        "id": "spec164",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleMouseEvent"
        ],
        "time": 12,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent handleTouchEvent tracks touch events",
        "description": "tracks touch events",
        "id": "spec165",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleTouchEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent handleTouchEvent does not register additional touch events once enter has been pressed",
        "description": "does not register additional touch events once enter has been pressed",
        "id": "spec166",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleTouchEvent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent adds to the answer when a number is given",
        "description": "adds to the answer when a number is given",
        "id": "spec167",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing Backspace or Delete",
        "description": "keyboard calls deleteChar when pressing Backspace or Delete",
        "id": "spec168",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 11,
        "executedExpectationsCount": 5
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing \"Del\"",
        "description": "keyboard calls deleteChar when pressing \"Del\"",
        "id": "spec169",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent keyboard calls OnSubmit() when Enter is pressed (if there is an answer)",
        "description": "keyboard calls OnSubmit() when Enter is pressed (if there is an answer)",
        "id": "spec170",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent keyboard accepts numbers",
        "description": "keyboard accepts numbers",
        "id": "spec171",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent calls register input service for each keypress",
        "description": "calls register input service for each keypress",
        "id": "spec172",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent handleKeyboardEvent does not register key strokes after submission",
        "description": "does not register key strokes after submission",
        "id": "spec173",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent audit entry is added on question rendered",
        "description": "is added on question rendered",
        "id": "spec174",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "audit entry"
        ],
        "time": 12,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionComponent audit entry is added on answer submitted",
        "description": "is added on answer submitted",
        "id": "spec175",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "audit entry"
        ],
        "time": 5,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "QuestionComponent #onClickAnswer calls registerInputService",
        "description": "calls registerInputService",
        "id": "spec176",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickAnswer"
        ],
        "time": 10,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickAnswer adds the number to the answer",
        "description": "adds the number to the answer",
        "id": "spec177",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickAnswer"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent #onClickAnswer does not add any new chars to the answer once it has been submitted",
        "description": "does not add any new chars to the answer once it has been submitted",
        "id": "spec178",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickAnswer"
        ],
        "time": 10,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickAnswer does not add to the input register once it has been submitted",
        "description": "does not add to the input register once it has been submitted",
        "id": "spec179",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickAnswer"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickBackspace calls registerInputService",
        "description": "calls registerInputService",
        "id": "spec180",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickBackspace"
        ],
        "time": 10,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickBackspace deletes a char from the answer",
        "description": "deletes a char from the answer",
        "id": "spec181",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickBackspace"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent #onClickBackspace does not delete a char from the answer once it has been submitted",
        "description": "does not delete a char from the answer once it has been submitted",
        "id": "spec182",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickBackspace"
        ],
        "time": 11,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickBackspace does not add to the input register once it has been submitted",
        "description": "does not add to the input register once it has been submitted",
        "id": "spec183",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickBackspace"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickSubmit calls registerInputService",
        "description": "calls registerInputService",
        "id": "spec184",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickSubmit"
        ],
        "time": 10,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onClickSubmit calls onSubmit()",
        "description": "calls onSubmit()",
        "id": "spec185",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickSubmit"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent #onClickSubmit does not add to the input register once submitted",
        "description": "does not add to the input register once submitted",
        "id": "spec186",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onClickSubmit"
        ],
        "time": 11,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "QuestionComponent #onSubmit stores the answer when submit is pressed",
        "description": "stores the answer when submit is pressed",
        "id": "spec187",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onSubmit"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent #onSubmit stores the answer before it stores the QuestionAnswered Audit",
        "description": "stores the answer before it stores the QuestionAnswered Audit",
        "id": "spec188",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#onSubmit"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionComponent #preSendTimeoutEvent stores the answer",
        "description": "stores the answer",
        "id": "spec189",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionComponent",
          "#preSendTimeoutEvent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionsIntroComponent should create",
        "description": "should create",
        "id": "spec190",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionsIntroComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionsIntroComponent onClick() calls check start submit successfully calls check start service",
        "description": "successfully calls check start service",
        "id": "spec191",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionsIntroComponent",
          "onClick()",
          "calls check start submit"
        ],
        "time": 9,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionsIntroComponent audit entry is added on WarmupComplete rendered",
        "description": "is added on WarmupComplete rendered",
        "id": "spec192",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionsIntroComponent",
          "audit entry"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CanExitGuard should instantiate",
        "description": "should instantiate",
        "id": "spec193",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CanExitGuard"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CanExitGuard should return false if component canDeactivate method returns false",
        "description": "should return false if component canDeactivate method returns false",
        "id": "spec194",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CanExitGuard"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CanExitGuard should return true if component canDeactivate method returns true",
        "description": "should return true if component canDeactivate method returns true",
        "id": "spec195",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CanExitGuard"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoggedInGuard should instantiate",
        "description": "should instantiate",
        "id": "spec196",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoggedInGuard"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoggedInGuard should redirect when the user is not signed in",
        "description": "should redirect when the user is not signed in",
        "id": "spec197",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoggedInGuard"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "LoggedInGuard should return true when the user is signed in",
        "description": "should return true when the user is signed in",
        "id": "spec198",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoggedInGuard"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AnswerService should be created",
        "description": "should be created",
        "id": "spec199",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AnswerService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AnswerService should store answer under unique key",
        "description": "should store answer under unique key",
        "id": "spec200",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AnswerService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AnswerService should create answers object if it does not already exist",
        "description": "should create answers object if it does not already exist",
        "id": "spec201",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AnswerService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppUsageService should be created",
        "description": "should be created",
        "id": "spec202",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppUsageService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppUsageService should fetch the app usage counter value",
        "description": "should fetch the app usage counter value",
        "id": "spec203",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppUsageService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppUsageService should increment the app usage counter by 1",
        "description": "should increment the app usage counter by 1",
        "id": "spec204",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppUsageService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppUsageService should store the app usage counter",
        "description": "should store the app usage counter",
        "id": "spec205",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppUsageService"
        ],
        "time": 2,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "AuditService should be created",
        "description": "should be created",
        "id": "spec206",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AuditService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AuditService addEntry should add entry as stringified value",
        "description": "should add entry as stringified value",
        "id": "spec207",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AuditService",
          "addEntry"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AzureQueueService when the production flag is disabled should not try to fallback when failing to send a message",
        "description": "should not try to fallback when failing to send a message",
        "id": "spec208",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AzureQueueService",
          "when the production flag is disabled"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AzureQueueService when the production flag is disabled should successfully send a message to the queue",
        "description": "should successfully send a message to the queue",
        "id": "spec209",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AzureQueueService",
          "when the production flag is disabled"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "AzureQueueService when the production flag is enabled should try to fallback when failing to send a message",
        "description": "should try to fallback when failing to send a message",
        "id": "spec210",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AzureQueueService",
          "when the production flag is enabled"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AzureQueueService when the production flag is enabled should successfully send a message to the queue",
        "description": "should successfully send a message to the queue",
        "id": "spec211",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AzureQueueService",
          "when the production flag is enabled"
        ],
        "time": 2,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "CheckCompleteService should be created",
        "description": "should be created",
        "id": "spec212",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckCompleteService submit should call azure queue service successfully, audit successful call and redirect to check complete page",
        "description": "submit should call azure queue service successfully, audit successful call and redirect to check complete page",
        "id": "spec213",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 1,
        "executedExpectationsCount": 12
      },
      {
        "fullName": "CheckCompleteService uses checkComplete token by default",
        "description": "uses checkComplete token by default",
        "id": "spec214",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckCompleteService submit should call azure queue service service unsuccessfully, audit failure\n    and redirect to submission failed page",
        "description": "submit should call azure queue service service unsuccessfully, audit failure\n    and redirect to submission failed page",
        "id": "spec215",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 2,
        "executedExpectationsCount": 9
      },
      {
        "fullName": "CheckCompleteService submit should call azure queue service service when sas token has expired and redirect to session expiry page",
        "description": "submit should call azure queue service service when sas token has expired and redirect to session expiry page",
        "id": "spec216",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 3,
        "executedExpectationsCount": 10
      },
      {
        "fullName": "CheckCompleteService submit should return if the app is configured to run in practice mode",
        "description": "submit should return if the app is configured to run in practice mode",
        "id": "spec217",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService"
        ],
        "time": 2,
        "executedExpectationsCount": 8
      },
      {
        "fullName": "CheckCompleteService getAllEntriesByKey stores all items in the corresponding key based category based on timestamp order",
        "description": "stores all items in the corresponding key based category based on timestamp order",
        "id": "spec218",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService",
          "getAllEntriesByKey"
        ],
        "time": 1,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "CheckCompleteService getPayload stores all items in the corresponding key based category based on timestamp order",
        "description": "stores all items in the corresponding key based category based on timestamp order",
        "id": "spec219",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckCompleteService",
          "getPayload"
        ],
        "time": 2,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "CheckStartService should be created",
        "description": "should be created",
        "id": "spec220",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStartService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckStartService submit should call azure queue service successfully and audit successful call",
        "description": "submit should call azure queue service successfully and audit successful call",
        "id": "spec221",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStartService"
        ],
        "time": 2,
        "executedExpectationsCount": 5
      },
      {
        "fullName": "CheckStartService submit should call azure queue service service unsuccessfully and audit failure",
        "description": "submit should call azure queue service service unsuccessfully and audit failure",
        "id": "spec222",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStartService"
        ],
        "time": 2,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "CheckStatusService should be created",
        "description": "should be created",
        "id": "spec223",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStatusService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckStatusService #hasUnfinishedCheck should return true if local storage submission pending entry is true",
        "description": "should return true if local storage submission pending entry is true",
        "id": "spec224",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStatusService",
          "#hasUnfinishedCheck"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckStatusService #hasUnfinishedCheck should return false if local storage is empty",
        "description": "should return false if local storage is empty",
        "id": "spec225",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStatusService",
          "#hasUnfinishedCheck"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckStatusService #hasFinishedCheck should return true if local storage submission completed entry is true",
        "description": "should return true if local storage submission completed entry is true",
        "id": "spec226",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStatusService",
          "#hasFinishedCheck"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CheckStatusService #hasFinishedCheck should return false if local storage is empty",
        "description": "should return false if local storage is empty",
        "id": "spec227",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CheckStatusService",
          "#hasFinishedCheck"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CompressorService should have a compress method",
        "description": "should have a compress method",
        "id": "spec228",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CompressorService"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CompressorService should have a decompress method",
        "description": "should have a decompress method",
        "id": "spec229",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CompressorService"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CompressorService the results of compressing and decompressing are equivalent to the input",
        "description": "the results of compressing and decompressing are equivalent to the input",
        "id": "spec230",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CompressorService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CompressorService Compressor.compress returns a string",
        "description": "returns a string",
        "id": "spec231",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CompressorService",
          "Compressor.compress"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "CompressorService Compressor.decompress returns a string",
        "description": "returns a string",
        "id": "spec232",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "CompressorService",
          "Compressor.decompress"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppConfigService should be created",
        "description": "should be created",
        "id": "spec233",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppConfigService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppConfigService loads data from the config json file",
        "description": "loads data from the config json file",
        "id": "spec234",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppConfigService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "AppConfigService throws a server error if the config json file does not exist",
        "description": "throws a server error if the config json file does not exist",
        "id": "spec235",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "AppConfigService"
        ],
        "time": 1,
        "executedExpectationsCount": 0
      },
      {
        "fullName": "ConnectivityService should be created",
        "description": "should be created",
        "id": "spec236",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should return true if both pupil api ping and test connectivity queue message creation are successful",
        "description": "should return true if both pupil api ping and test connectivity queue message creation are successful",
        "id": "spec237",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should return false if both pupil api ping and test connectivity queue message creation are unsuccessful",
        "description": "should return false if both pupil api ping and test connectivity queue message creation are unsuccessful",
        "id": "spec238",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should return false if pupil api ping is unsuccessful",
        "description": "should return false if pupil api ping is unsuccessful",
        "id": "spec239",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should return false if test connectivity queue message creation is unsuccessful",
        "description": "should return false if test connectivity queue message creation is unsuccessful",
        "id": "spec240",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should call generateConnectivityErrorMessage when errorMessages array has been populated",
        "description": "should call generateConnectivityErrorMessage when errorMessages array has been populated",
        "id": "spec241",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "ConnectivityService connectivityCheckSucceeded should not call generateConnectivityErrorMessage when errorMessages array is empty",
        "description": "should not call generateConnectivityErrorMessage when errorMessages array is empty",
        "id": "spec242",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "ConnectivityService",
          "connectivityCheckSucceeded"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService should be created",
        "description": "should be created",
        "id": "spec243",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService captures device info to localStorage",
        "description": "captures device info to localStorage",
        "id": "spec244",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is IE9",
        "description": "returns true when browser is IE9",
        "id": "spec245",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is IE10",
        "description": "returns true when browser is IE10",
        "id": "spec246",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is IE11",
        "description": "returns true when browser is IE11",
        "id": "spec247",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is Edge version 80.0.361.62",
        "description": "returns true when browser is Edge version 80.0.361.62",
        "id": "spec248",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is Firefox 74",
        "description": "returns true when browser is Firefox 74",
        "id": "spec249",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is Safari 605.1.15",
        "description": "returns true when browser is Safari 605.1.15",
        "id": "spec250",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "DeviceService isUnsupportedBrowser returns true when browser is Chrome version 80.0.3987.149",
        "description": "returns true when browser is Chrome version 80.0.3987.149",
        "id": "spec251",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "DeviceService",
          "isUnsupportedBrowser"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackService should be created",
        "description": "should be created",
        "id": "spec252",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackService postFeedback  should call queueSubmit",
        "description": "should call queueSubmit",
        "id": "spec253",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackService",
          "postFeedback "
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "FeedbackService postFeedback  should return if feedback is not fetched before making any call",
        "description": "should return if feedback is not fetched before making any call",
        "id": "spec254",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackService",
          "postFeedback "
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "FeedbackService queueSubmit  should call azureQueueService addMessage",
        "description": "should call azureQueueService addMessage",
        "id": "spec255",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "FeedbackService",
          "queueSubmit "
        ],
        "time": 3,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "LoginErrorDiagnosticsService should be created",
        "description": "should be created",
        "id": "spec256",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorDiagnosticsService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginErrorDiagnosticsService process should return if error status code is not 0",
        "description": "should return if error status code is not 0",
        "id": "spec257",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorDiagnosticsService",
          "process"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginErrorDiagnosticsService process should call changeMessage when api url refused connection and browser status is online",
        "description": "should call changeMessage when api url refused connection and browser status is online",
        "id": "spec258",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorDiagnosticsService",
          "process"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginErrorService should be created",
        "description": "should be created",
        "id": "spec259",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorService"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginErrorService should have default observable message value",
        "description": "should have default observable message value",
        "id": "spec260",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "LoginErrorService changeMessage should provide the new value to the BehaviorSubject",
        "description": "changeMessage should provide the new value to the BehaviorSubject",
        "id": "spec261",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "LoginErrorService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PupilPrefsService should be created",
        "description": "should be created",
        "id": "spec262",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "PupilPrefsService storePupilPrefs  should call pupil prefs azure queue storage",
        "description": "should call pupil prefs azure queue storage",
        "id": "spec263",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService",
          "storePupilPrefs "
        ],
        "time": 2,
        "executedExpectationsCount": 10
      },
      {
        "fullName": "PupilPrefsService storePupilPrefs  should audit log the error when azureQueueService add Message fails",
        "description": "should audit log the error when azureQueueService add Message fails",
        "id": "spec264",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService",
          "storePupilPrefs "
        ],
        "time": 1,
        "executedExpectationsCount": 5
      },
      {
        "fullName": "PupilPrefsService loadPupilPrefs should load prefs from local storage access_arrangements key and return",
        "description": "should load prefs from local storage access_arrangements key and return",
        "id": "spec265",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService",
          "loadPupilPrefs"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "PupilPrefsService loadPupilPrefs should load prefs from local storage config key",
        "description": "should load prefs from local storage config key",
        "id": "spec266",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService",
          "loadPupilPrefs"
        ],
        "time": 1,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "PupilPrefsService loadPupilPrefs should provide defaults if local storage does not provide existing values",
        "description": "should provide defaults if local storage does not provide existing values",
        "id": "spec267",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "PupilPrefsService",
          "loadPupilPrefs"
        ],
        "time": 2,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "QuestionService should be created",
        "description": "should be created",
        "id": "spec268",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionService getQuestion() returns a Question",
        "description": "getQuestion() returns a Question",
        "id": "spec269",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "QuestionService getQuestion() returns a Question",
        "description": "getQuestion() returns a Question",
        "id": "spec270",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 3,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "QuestionService getQuestion() with an out-of-range parameter throws an error",
        "description": "getQuestion() with an out-of-range parameter throws an error",
        "id": "spec271",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionService getQuestion() with an out-of-range parameter throws an error",
        "description": "getQuestion() with an out-of-range parameter throws an error",
        "id": "spec272",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionService getQuestion() with a non-integer throws an error",
        "description": "getQuestion() with a non-integer throws an error",
        "id": "spec273",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionService getNumberOfQuestions() returns the correct number of questions",
        "description": "getNumberOfQuestions() returns the correct number of questions",
        "id": "spec274",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "QuestionService reset() clears the questions and config",
        "description": "reset() clears the questions and config",
        "id": "spec275",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "QuestionService getCurrentQuestionNumber() returns the current question number",
        "description": "getCurrentQuestionNumber() returns the current question number",
        "id": "spec276",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "QuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupQuestionService should be created",
        "description": "should be created",
        "id": "spec277",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupQuestionService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupQuestionService should initialise correctly",
        "description": "should initialise correctly",
        "id": "spec278",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupQuestionService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "RegisterInputService should be created",
        "description": "should be created",
        "id": "spec279",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "RegisterInputService StoreEntry will call localstorage and store with a unique key name",
        "description": "StoreEntry will call localstorage and store with a unique key name",
        "id": "spec280",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "RegisterInputService StoreEntry to should store entry",
        "description": "StoreEntry to should store entry",
        "id": "spec281",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "RegisterInputService StoreEntry will generate new Date if the event timestamp is undefined",
        "description": "StoreEntry will generate new Date if the event timestamp is undefined",
        "id": "spec282",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 3,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "RegisterInputService AddEntry to call StoreEntry",
        "description": "AddEntry to call StoreEntry",
        "id": "spec283",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "RegisterInputService expects a left click event to be registered",
        "description": "expects a left click event to be registered",
        "id": "spec284",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "RegisterInputService calls the storeEntry method",
        "description": "calls the storeEntry method",
        "id": "spec285",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RegisterInputService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "RouteService should be created",
        "description": "should be created",
        "id": "spec286",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RouteService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "RouteService should have undefined previous url before navigating twice",
        "description": "should have undefined previous url before navigating twice",
        "id": "spec287",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RouteService"
        ],
        "time": 0,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "RouteService should have the correct previous url after naviation",
        "description": "should have the correct previous url after naviation",
        "id": "spec288",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "RouteService"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService constructor should be created",
        "description": "should be created",
        "id": "spec289",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "constructor"
        ],
        "time": 3,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpeechService #removeAutoplayRestrictions should remove its event listeners",
        "description": "should remove its event listeners",
        "id": "spec290",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#removeAutoplayRestrictions"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService #isSupported returns true if the api is supported",
        "description": "returns true if the api is supported",
        "id": "spec291",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#isSupported"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService #isSupported returns false if the api is NOT supported",
        "description": "returns false if the api is NOT supported",
        "id": "spec292",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#isSupported"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService #speak should have a speak method",
        "description": "should have a speak method",
        "id": "spec293",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#speak"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService #speak calls the audit service on start and end",
        "description": "calls the audit service on start and end",
        "id": "spec294",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#speak"
        ],
        "time": 1,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "SpeechService #speakQuestion should have a speakQuestion method",
        "description": "should have a speakQuestion method",
        "id": "spec295",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#speakQuestion"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpeechService #speakQuestion calls the audit service on start and end",
        "description": "calls the audit service on start and end",
        "id": "spec296",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpeechService",
          "#speakQuestion"
        ],
        "time": 1,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "StorageService should be created",
        "description": "should be created",
        "id": "spec297",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "StorageService setItem adds item to localStorage when key provided",
        "description": "adds item to localStorage when key provided",
        "id": "spec298",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "setItem"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "StorageService getItem returns JSON item when key provided and item exists",
        "description": "returns JSON item when key provided and item exists",
        "id": "spec299",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "getItem"
        ],
        "time": 0,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "StorageService getItem returns string item when key provided and item exists",
        "description": "returns string item when key provided and item exists",
        "id": "spec300",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "getItem"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "StorageService getItem returns null when key provided and item does not exist",
        "description": "returns null when key provided and item does not exist",
        "id": "spec301",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "getItem"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "StorageService removeItem removes item when key provided and item exists",
        "description": "removes item when key provided and item exists",
        "id": "spec302",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "removeItem"
        ],
        "time": 4,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "StorageService clear calls localStorage.clear",
        "description": "calls localStorage.clear",
        "id": "spec303",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "clear"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "StorageService getKeys returns all keys from localStorage",
        "description": "returns all keys from localStorage",
        "id": "spec304",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "getKeys"
        ],
        "time": 1,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "StorageService getAllItems returns all key-value pairs from localStorage in a single object",
        "description": "returns all key-value pairs from localStorage in a single object",
        "id": "spec305",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "StorageService",
          "getAllItems"
        ],
        "time": 1,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "storageKey AnswersStorageKey should create a composite key with a prefix and suffix",
        "description": "should create a composite key with a prefix and suffix",
        "id": "spec306",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "AnswersStorageKey"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "storageKey InputsStorageKey should create a composite key with a prefix and suffix",
        "description": "should create a composite key with a prefix and suffix",
        "id": "spec307",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "InputsStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "storageKey SessionStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec308",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "SessionStorageKey"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey AuditStorageKey should create a composite key with a prefix and suffix",
        "description": "should create a composite key with a prefix and suffix",
        "id": "spec309",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "AuditStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "storageKey QuestionsStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec310",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "QuestionsStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey ConfigStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec311",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "ConfigStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey PupilStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec312",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "PupilStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey SchoolStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec313",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "SchoolStorageKey"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey FeedbackStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec314",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "FeedbackStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey CheckStateStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec315",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "CheckStateStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey DeviceStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec316",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "DeviceStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey PendingSubmissionStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec317",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "PendingSubmissionStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey CompletedSubmissionStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec318",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "CompletedSubmissionStorageKey"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey AccessArrangementsStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec319",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "AccessArrangementsStorageKey"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey TokensStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec320",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "TokensStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey TimeoutStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec321",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "TimeoutStorageKey"
        ],
        "time": 0,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "storageKey CheckStartTimeStorageKey should create a static key",
        "description": "should create a static key",
        "id": "spec322",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "storageKey",
          "CheckStartTimeStorageKey"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TimerService should be created",
        "description": "should be created",
        "id": "spec323",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "TimerService should start the timer and set time remaining",
        "description": "should start the timer and set time remaining",
        "id": "spec324",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "TimerService should not start a new timer if already started",
        "description": "should not start a new timer if already started",
        "id": "spec325",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TimerService should load the timer from local storage",
        "description": "should load the timer from local storage",
        "id": "spec326",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 1,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "TimerService should clear timer from local storage",
        "description": "should clear timer from local storage",
        "id": "spec327",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TimerService should stop the timer and clear the interval",
        "description": "should stop the timer and clear the interval",
        "id": "spec328",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TimerService should start the timer and emit timeout event",
        "description": "should start the timer and emit timeout event",
        "id": "spec329",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TimerService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TokenService should be created",
        "description": "should be created",
        "id": "spec330",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TokenService"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "TokenService getToken should fetch the tokens using storage service",
        "description": "getToken should fetch the tokens using storage service",
        "id": "spec331",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "TokenService"
        ],
        "time": 3,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "UserService login should persist response body to storage",
        "description": "should persist response body to storage",
        "id": "spec332",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "UserService",
          "login"
        ],
        "time": 3,
        "executedExpectationsCount": 4
      },
      {
        "fullName": "UserService login should return a promise that rejects on invalid login",
        "description": "should return a promise that rejects on invalid login",
        "id": "spec333",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "UserService",
          "login"
        ],
        "time": 2,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "UserService logout should clear storage on logout",
        "description": "should clear storage on logout",
        "id": "spec334",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "UserService",
          "logout"
        ],
        "time": 1,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WindowRefService should be created",
        "description": "should be created",
        "id": "spec335",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WindowRefService"
        ],
        "time": 2,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SessionExpiredComponent should be created",
        "description": "should be created",
        "id": "spec336",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SessionExpiredComponent"
        ],
        "time": 14,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SoundComponent should create",
        "description": "should create",
        "id": "spec337",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SoundComponent"
        ],
        "time": 24,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SoundComponent has a function to play the end of question sound",
        "description": "has a function to play the end of question sound",
        "id": "spec338",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SoundComponent"
        ],
        "time": 8,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SoundComponent has a function to play an alert that the time is nearly up",
        "description": "has a function to play an alert that the time is nearly up",
        "id": "spec339",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SoundComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SoundComponent should have two audio elements",
        "description": "should have two audio elements",
        "id": "spec340",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SoundComponent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenPracticeQuestionComponent should create",
        "description": "should create",
        "id": "spec341",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent"
        ],
        "time": 19,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenPracticeQuestionComponent should write an audit entry to show the question was rendered",
        "description": "should write an audit entry to show the question was rendered",
        "id": "spec342",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenPracticeQuestionComponent should start speaking straight away",
        "description": "should start speaking straight away",
        "id": "spec343",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenPracticeQuestionComponent the timer does not start straight away",
        "description": "does not start straight away",
        "id": "spec344",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent",
          "the timer"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenPracticeQuestionComponent the timer starts after the speech has ended",
        "description": "starts after the speech has ended",
        "id": "spec345",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent",
          "the timer"
        ],
        "time": 11,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenPracticeQuestionComponent handleKeyboardEvent does not add to the answer after submission",
        "description": "does not add to the answer after submission",
        "id": "spec346",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenPracticeQuestionComponent handleKeyboardEvent does not register key strokes for warm up questions",
        "description": "does not register key strokes for warm up questions",
        "id": "spec347",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenPracticeQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 11,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenQuestionComponent should create",
        "description": "should create",
        "id": "spec348",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent"
        ],
        "time": 18,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenQuestionComponent starts speaking the question straight away",
        "description": "starts speaking the question straight away",
        "id": "spec349",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent"
        ],
        "time": 5,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenQuestionComponent the timer does not start straight away",
        "description": "does not start straight away",
        "id": "spec350",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent",
          "the timer"
        ],
        "time": 12,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenQuestionComponent the timer starts after the speech has ended",
        "description": "starts after the speech has ended",
        "id": "spec351",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent",
          "the timer"
        ],
        "time": 12,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SpokenQuestionComponent #preSendTimeoutEvent stores the answer",
        "description": "stores the answer",
        "id": "spec352",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent",
          "#preSendTimeoutEvent"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SpokenQuestionComponent handleKeyboardEvent does not register key strokes after submission",
        "description": "does not register key strokes after submission",
        "id": "spec353",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SpokenQuestionComponent",
          "handleKeyboardEvent"
        ],
        "time": 12,
        "executedExpectationsCount": 3
      },
      {
        "fullName": "SubmissionFailedComponent should be created",
        "description": "should be created",
        "id": "spec354",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SubmissionFailedComponent"
        ],
        "time": 6,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SubmissionPendingComponent should be created",
        "description": "should be created",
        "id": "spec355",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SubmissionPendingComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "SubmissionPendingComponent ngOnInit() calls check complete submit method",
        "description": "calls check complete submit method",
        "id": "spec356",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SubmissionPendingComponent",
          "ngOnInit()"
        ],
        "time": 5,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "SubmissionPendingComponent ngOnInit() provides an appropriate title when a previous check is detected though a URL param",
        "description": "provides an appropriate title when a previous check is detected though a URL param",
        "id": "spec357",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "SubmissionPendingComponent",
          "ngOnInit()"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupCompleteComponent should be created",
        "description": "should be created",
        "id": "spec358",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupCompleteComponent"
        ],
        "time": 6,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupCompleteComponent emits onClick()",
        "description": "emits onClick()",
        "id": "spec359",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupCompleteComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupCompleteComponent audit entry is added on WarmupComplete rendered",
        "description": "is added on WarmupComplete rendered",
        "id": "spec360",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupCompleteComponent",
          "audit entry"
        ],
        "time": 3,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "WarmupIntroComponent should be created",
        "description": "should be created",
        "id": "spec361",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupIntroComponent"
        ],
        "time": 11,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupIntroComponent emits onClick()",
        "description": "emits onClick()",
        "id": "spec362",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupIntroComponent"
        ],
        "time": 7,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WarmupIntroComponent audit entry is added on WarmupIntro rendered",
        "description": "is added on WarmupIntro rendered",
        "id": "spec363",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupIntroComponent",
          "audit entry"
        ],
        "time": 3,
        "executedExpectationsCount": 2
      },
      {
        "fullName": "WarmupLoadingComponent should create",
        "description": "should create",
        "id": "spec364",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WarmupLoadingComponent"
        ],
        "time": 9,
        "executedExpectationsCount": 1
      },
      {
        "fullName": "WebsiteOfflineComponent should create",
        "description": "should create",
        "id": "spec365",
        "log": [],
        "skipped": false,
        "disabled": false,
        "pending": false,
        "success": true,
        "suite": [
          "WebsiteOfflineComponent"
        ],
        "time": 10,
        "executedExpectationsCount": 1
      }
    ]
  },
  "summary": {
    "success": 362,
    "failed": 0,
    "skipped": 4,
    "error": false,
    "disconnected": false,
    "exitCode": 0
  }
}
