{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "maxLength": 10,
      "allowedValues": [
        "dev",
        "test",
        "preprod",
        "live"
      ],
      "type": "string"
    },
    "sqlAdminUsername": {
      "type": "securestring"
    },
    "sqlAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "storageAccountName": "[concat('sa', parameters('environmentName'), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[concat('asp', parameters('environmentName'), uniqueString(resourceGroup().id))]",
    "adminAppName": "[concat('admin', parameters('environmentName'), 'mtc')]",
    "pupilAppName": "[concat('pupil', parameters('environmentName'), 'mtc')]",
    "assetsAppName": "[concat('assets', parameters('environmentName'), 'mtc')]",
    "sqlServerName": "[concat('sql', parameters('environmentName'), 'mtc')]",
    "sqlDbName": "[concat('mtc-admin-', parameters('environmentName'), '-', uniqueString(resourceGroup().id))]",
    "containerRegistryName": "[concat('cr', parameters('environmentName'), 'mtc')]",
    "adminWebhookName": "[concat('adminWebhook', parameters('environmentName'), 'mtc')]"
  },
  "resources": [
    {
      "comments": "V2 Storage Account",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "product": "MTC"
      },
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      }
    },
    {
      "comments": "App Service Plan",
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "S3",
        "tier": "Standard",
        "size": "S3",
        "family": "S",
        "capacity": 1
      },
      "kind": "linux",
      "name": "[variables('appServicePlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": true,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "comments": "Admin Web App Container",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "name": "[variables('adminAppName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('adminAppName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('adminAppName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "comments": "Pupil Web App Container",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "name": "[variables('pupilAppName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('pupilAppName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('pupilAppName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "comments": "Assets Web App Container",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "name": "[variables('assetsAppName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('assetsAppName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('assetsAppName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "comments": "Logical SQL Server",
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[variables('sqlServerName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[concat(variables('sqlServerName'), '/', variables('sqlDbName'))]",
          "type": "Microsoft.Sql/servers/databases",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CI_AS"
          }
        }
      ]
    }
  ],
  "outputs": {
    "siteUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('adminAppName'))).hostnames[0]]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]"
    }
  }
}