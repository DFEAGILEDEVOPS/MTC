# AzureDevops build defintion for PR database migration validation checks
resources:
  - repo: self

name: Validate-PR-Migrations-$(date:yyyyMMdd)$(rev:.r)

# do not trigger on master commits
trigger: none

# trigger this build for PRs targeting master
pr:
  branches:
    include: [ master ]

pool:
  name: $(BuildAgentPool)

jobs:
- job: FastFail
  steps:
  - task: Bash@3
    displayName: PR FastFail check
    env:
      PULL_REQUEST_ID: $(System.PullRequest.PullRequestNumber)
    inputs:
      targetType: filePath
      filePath: 'deploy/pr-label-check.sh'
      arguments: $PULL_REQUEST_ID
      failOnStderr: true
- job: ValidateMigrations
  dependsOn: FastFail
  steps:
  - task: AzureCLI@2
    displayName: 'Create Database'
    inputs:
      azureSubscription: $(TargetAzureSubscription)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "attempting to create database $(Build.BuildNumber) on server $(TargetDbServer)..."
        az sql db create --name $(Build.BuildNumber) --resource-group $(TargetDbResourceGroup) --server $(TargetDbServer) --service-objective GP_S_Gen5_1
  - bash: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      nvm use
      yarn install --frozen-lockfile --production

    workingDirectory: admin
    displayName: 'admin: yarn install'

  - task: Bash@3
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/bash-v3?view=azure-pipelines
    displayName: 'Migrate Database Up'
    inputs:
      azureSubscription: $(TargetAzureSubscription)
      targetType: inline
      script: |
        echo "Migrating db up for db: ${SQL_DATABASE}"
        # https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
        cd $(Build.Repository.LocalPath)
        cd db
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm use
        yarn install --frozen-lockfile --production
        yarn migrate max
        echo "exit code:$?"
    env:
      SQL_ADMIN_USER_PASSWORD: $(SqlAdminUserPassword)
      SQL_ADMIN_USER: $(SqlAdminUser)
      SQL_APP_USER_PASSWORD: $(SqlAppUserPassword)
      SQL_AZURE_SCALE: $(SqlAzureScale)
      SQL_DATABASE: $(Build.BuildNumber)
      SQL_PUPIL_CENSUS_USER_PASSWORD: $(SqlCensusUserPassword)
      SQL_SERVER: $(SqlServer)
      SQL_TECH_SUPPORT_USER_PASSWORD: $(SqlTechSupportUserPassword)

  - task: Bash@3
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/bash-v3?view=azure-pipelines
    displayName: 'Migrate Database Down'
    inputs:
      azureSubscription: $(TargetAzureSubscription)
      targetType: inline
      script: |
        echo "Migrating db down for db: ${SQL_DATABASE}"
        # https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
        cd $(Build.Repository.LocalPath)
        cd db
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm use
        yarn install --frozen-lockfile --production
        yarn migrate 0
        echo "exit code:$?"
    env:
      SQL_ADMIN_USER_PASSWORD: $(SqlAdminUserPassword)
      SQL_ADMIN_USER: $(SqlAdminUser)
      SQL_APP_USER_PASSWORD: $(SqlAppUserPassword)
      SQL_AZURE_SCALE: $(SqlAzureScale)
      SQL_DATABASE: $(Build.BuildNumber)
      SQL_PUPIL_CENSUS_USER_PASSWORD: $(SqlCensusUserPassword)
      SQL_SERVER: $(SqlServer)
      SQL_TECH_SUPPORT_USER_PASSWORD: $(SqlTechSupportUserPassword)

  - task: AzureCLI@2
    displayName: 'Delete Database'
    inputs:
      azureSubscription: $(TargetAzureSubscription)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "attempting to delete database $(Build.BuildNumber) on server $(TargetDbServer)"
        az sql db delete --name $(Build.BuildNumber) --resource-group $(TargetDbResourceGroup) --server $(TargetDbServer) --yes
        echo "exit code:$?"
    condition: always()


