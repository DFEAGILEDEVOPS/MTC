# AzureDevops build defintion for PR database migration validation checks
resources:
  - repo: self

name: Validate-PR-Migrations-$(date:yyyyMMdd)$(rev:.r)

# do not trigger on master commits
trigger: none

# trigger this build for PRs targeting master
pr:
  branches:
    include: [ master ]

pool:
  name: MTC LIVE

jobs:
- job: FastFail
  steps:
  - task: Bash@3
    displayName: PR FastFail check
    env:
      PULL_REQUEST_ID: $(System.PullRequest.PullRequestNumber)
    inputs:
      targetType: filePath
      filePath: 'deploy/pr-label-check.sh'
      arguments: $PULL_REQUEST_ID
      failOnStderr: true
- job: ValidateMigrations
  dependsOn: FastFail
  steps:
  - bash: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      nvm use
      yarn install --frozen-lockfile

    workingDirectory: admin
    displayName: 'admin: yarn install'

  - task: Bash@3
    displayName: 'Migrate Database Up'
    inputs:
      targetType: filePath
      filePath: 'deploy/sql/vso-validate-migrations/vso-migrate-up.sh'
      arguments: '$(SqlAdminUser) $(SqlAdminUserPassword) $(SqlAppUserPassword) $(Build.BuildNumber)'
    env:
      SQL_SERVER: $(SqlServer)

  - task: Bash@3
    displayName: 'Migrate Database Down'
    inputs:
      targetType: filePath
      filePath: 'deploy/sql/vso-validate-migrations/vso-migrate-down.sh'
      arguments: '$(SqlAdminUser) $(SqlAdminUserPassword) $(SqlAppUserPassword) $(Build.BuildNumber)'
    env:
      SQL_SERVER: $(SqlServer)

  - task: AzureCLI@2
    displayName: 'Delete Database'
    inputs:
      azureSubscription: $(TargetAzureSubscription)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az sql db delete --name $(Build.BuildNumber) --resource-group $(TargetDbResourceGroup) --server $(TargetDbServer) --yes

    condition: always()


