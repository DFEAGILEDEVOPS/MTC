name: nightly-$(date:yyyyMMdd)$(rev:.r)
resources:
- repo: self
  clean: true
  fetchDepth: 1

pool:
  name: MTC LIVE

variables:
  AZURE_SUBSCRIPTION:
  RESOURCE_GROUP:
  SQL_DATABASE:
  SQL_SERVER:
  SQL_ADMIN_USER:
  SQL_ADMIN_USER_PASSWORD:
  SQL_APP_USER: 'mtcAdminUser' # default, sourced from config.js.  Does not need to be changed unless environment uses custom value
  SQL_APP_USER_PASSWORD:
  SQL_SERVER_SHORTNAME: # hostname without FQDN, required for CLI call to delete old database

jobs:
- job: Phase_1
  displayName: 'Prepare Database'
  steps:
  - task: AzureCLI@1
    displayName: 'Delete Existing Database'
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptLocation: inlineScript
      inlineScript: 'az sql db delete --name $(SQL_DATABASE) --resource-group $(RESOURCE_GROUP) --server $(SQL_SERVER_SHORTNAME) --yes'

  - task: Bash@3
    displayName: 'create database'
    inputs:
      targetType: ./
      filePath: 'deploy/sql-migrations/migrate-db.sh'
      arguments: '$(SQL_ADMIN_USER) $(SQL_ADMIN_USER_PASSWORD) $(SQL_APP_USER_PASSWORD)'

  - task: Bash@3
    displayName: 'seed database'
    inputs:
      targetType: ./
      filePath: 'deploy/sql-migrations/seed-db.sh'
      arguments: '$(SQL_ADMIN_USER) $(SQL_ADMIN_USER_PASSWORD) $(SQL_APP_USER_PASSWORD)'

- job: Phase_2
  displayName: Run Pupil Tests
  condition: succeeded()
  steps:
  - bash: |
       source ~/.profile
       gem install bundler
       bundle install
       rake features
    workingDirectory: 'test/pupil-hpa'
    displayName: 'PUPIL: Run End to End Tests'

  - task: CopyFiles@2
    displayName: 'Copy screenshots to staging folder'
    inputs:
      SourceFolder: 'test/pupil-hpa'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/pupil-tests'
    condition: succeededOrFailed()

  - task: ArchiveFiles@2
    displayName: 'Archive $(Build.ArtifactStagingDirectory)/pupil-tests'
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/pupil-tests'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: mtc-nightly-build-PUPIL'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      ArtifactName: 'mtc-nightly-build-PUPIL'
    condition: succeededOrFailed()


- job: Phase_3
  displayName: Run Admin Tests
  condition: succeeded()
  steps:
  - bash: |
       source ~/.profile
       gem install bundler
       bundle install
       rake features
    workingDirectory: 'test/admin-hpa'
    displayName: 'ADMIN: Run End to End Tests'

  - task: CopyFiles@2
    displayName: 'Copy screenshots to staging folder'
    inputs:
      SourceFolder: 'test/admin-hpa'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/admin-tests'
    condition: succeededOrFailed()

  - task: ArchiveFiles@2
    displayName: 'Archive $(Build.ArtifactStagingDirectory)/admin-tests'
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/admin-tests'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: mtc-nightly-build'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      ArtifactName: 'mtc-nightly-build-ADMIN'
    condition: succeededOrFailed()

- job: Phase_4
  displayName: 'Reset Database'
  condition: succeededOrFailed()
  steps:
  - task: AzureCLI@1
    displayName: 'Delete Existing Database'
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptLocation: inlineScript
      inlineScript: 'az sql db delete --name $(SQL_DATABASE) --resource-group $(RESOURCE_GROUP) --server $(SQL_SERVER_SHORTNAME) --yes'

  - task: Bash@3
    displayName: 'create database'
    inputs:
      targetType: ./
      filePath: 'deploy/sql-migrations/migrate-db.sh'
      arguments: '$(SQL_ADMIN_USER) $(SQL_ADMIN_USER_PASSWORD) $(SQL_APP_USER_PASSWORD)'

  - task: Bash@3
    displayName: 'seed database'
    inputs:
      targetType: ./
      filePath: 'deploy/sql-migrations/seed-db.sh'
      arguments: '$(SQL_ADMIN_USER) $(SQL_ADMIN_USER_PASSWORD) $(SQL_APP_USER_PASSWORD)'
