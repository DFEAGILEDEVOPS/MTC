# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo/
    docker:
#      - image: circleci/node:10-browsers
      - image: ovix/mtc_circleci:latest
    environment:
      TZ: Europe/London
    steps:
      - checkout
      - restore_cache:
          key: v1-node-admin-deps-{{ checksum "admin/yarn.lock" }}
      - restore_cache:
          key: v1-node-pupil-spa-deps-{{ checksum "pupil-spa/yarn.lock" }}
      - restore_cache:
          key: v1-node-pupil-api-deps-{{ checksum "pupil-api/yarn.lock" }}
      - restore_cache:
          key: v1-node-functions-app-deps-{{ checksum "functions-app/yarn.lock" }}
      - restore_cache:
          key: v1-node-tslib-deps-{{ checksum "tslib/yarn.lock" }}
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh; cd admin; nvm use; yarn install --frozen-lockfile
      - run:
          name: Admin lint and ts compile
          command: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh; cd admin; nvm use; yarn lintAndBuild; rm -rf dist
      - run:
          name: Install JUnit coverage reporter for admin unit tests
          command: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh; cd admin; nvm use; yarn add --dev jest-junit
      - run:
          name: Admin unit tests with JUnit as reporter
          command: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh; cd admin; nvm use; ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit --collectCoverage=true
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh; cd pupil-spa; nvm use; yarn install --frozen-lockfile
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd pupil-spa; nvm use; yarn run test-single
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd pupil-api; nvm use; yarn install --frozen-lockfile
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd pupil-api; nvm use; yarn run test
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd functions-app; nvm use; yarn install --frozen-lockfile
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd functions-app; nvm use; yarn test
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd tslib; nvm use; yarn install --frozen-lockfile
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd tslib; nvm use; yarn test:throttle
      - run: export NVM_DIR=${HOME}/.nvm && source ${NVM_DIR}/nvm.sh;cd admin; nvm use; yarn test:frontend
      - save_cache:
          key: v1-node-admin-deps-{{ checksum "admin/yarn.lock" }}
          paths:
            - ~/repo/admin/node_modules
      - save_cache:
          key: v1-node-pupil-spa-deps-{{ checksum "pupil-spa/yarn.lock" }}
          paths:
            - ~/repo/pupil-spa/node_modules
      - save_cache:
          key: v1-node-pupil-api-deps-{{ checksum "pupil-api/yarn.lock" }}
          paths:
            - ~/repo/pupil-api/node_modules
      - save_cache:
          key: v1-node-functions-app-deps-{{ checksum "functions-app/yarn.lock" }}
          paths:
            - ~/repo/functions-app/node_modules
      - save_cache:
          key: v1-node-tslib-deps-{{ checksum "tslib/yarn.lock" }}
          paths:
            - ~/repo/tslib/node_modules

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
