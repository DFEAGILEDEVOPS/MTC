"AAColoursComponent should load the component"
"AAColoursComponent should redirect to the access-settings page on click if the user has navigated from access-settings"
"AAColoursComponent should redirect to the sign-in-success page on click if the user has not navigated from access-settings"
"AAColoursComponent should redirect to the sign-in-success page on click if previous url is undefined"
"AAColoursComponent should store pupil prefs when navigating away"
"AAFontsComponent should load the component"
"AAFontsComponent should redirect to colour contrast when enabled"
"AAFontsComponent should redirect to the welcome page when colour contrast not enabled"
"AAFontsComponent should store pupil prefs when navigating away"
"AASettingsComponent With input assistant disabled should create"
"AASettingsComponent With input assistant disabled should redirect to warm up introduction page"
"AASettingsComponent With input assistant enabled and when check type is live should have empty form data"
"AASettingsComponent With input assistant enabled and when check type is live should redirect to the sign-in-success page on successful submission"
"AASettingsComponent With input assistant enabled and when check type is live should not redirect to the sign-in-success when a disallowed special character(exclamation) is detected"
"AASettingsComponent With input assistant enabled and when check type is live should not redirect to the sign-in-success when a disallowed special character(double quotes) is detected"
"AASettingsComponent With input assistant enabled and when check type is familiarisation should not call storageService setPupil method when practice mode is switched on"
"AccessibilityStatementComponent should create"
"AppComponent should create the app"
"BreadcrumbsComponent should create"
"CheckCompleteComponent should be created"
"CheckCompleteComponent onClickStartAgain should clear the storageService state and redirect to the check start page"
"CheckComponent should be created"
"CheckComponent default view should be the warmup-intro screen"
"CheckComponent setting the viewState to question shows the question screen"
"CheckComponent setting the viewState to complete shows the check complete screen"
"CheckComponent manualSubmitHandler calls changeState()"
"CheckComponent questionTimeoutHandler() calls changeState()"
"CheckComponent loadingTimeoutHandler increments the state"
"CheckComponent handleKeyboardEvent cancels (nearly) all keyboard events and returns false"
"CheckComponent handleKeyboardEvent allows tab and enter keys for AX keyboard navigation"
"CheckComponent handleTouchEvent cancels touchend events and returns false"
"CheckComponent warmup click handlers changes state for warmupIntroClickHandler()"
"CheckComponent warmup click handlers changes state for warmupCompleteClickHandler()"
"CheckComponent changeState() shows the warmup-intro when the state is \"warmup-intro\""
"CheckComponent changeState() shows the warmup loading screen when the state is \"LW<digit>\""
"CheckComponent changeState() shows the practice question when the state is \"W<digit>\""
"CheckComponent changeState() shows the warmup complete when the state is \"warmup-complete\""
"CheckComponent changeState() shows the loading page when the state is \"L<digit>\""
"CheckComponent changeState() shows the question when the state is \"Q<digit>\""
"CheckComponent changeState() shows the submission pending screen when the state is \"submission-pending\""
"CheckComponent check complete state is adding an audit entry for checkComplete"
"CheckComponent page refresh calls refreshDetected during init when the checkstate is found"
"CheckComponent page refresh logs an audit entry to say the page was refreshed"
"CheckComponent page refresh moves to the next state if a real test question was asked"
"CheckComponent page refresh state stays the same if a page refresh happens on a warmup loading screen"
"CheckComponent page refresh state moves on if a page refresh happens on a warmup question"
"CheckComponent page refresh state stays the same if a page refresh happens on the warm-up intro"
"CheckComponent page refresh state stays the same if a page refresh happens on the warm-up complete"
"CheckComponent page refresh state stays the same if a page refresh happens on a loading screen"
"CheckComponent page refresh state stays the same if a page refresh happens on the submission pending screen"
"CheckComponent page refresh the answer is recorded as blank when refreshing during on a question"
"CheckComponent page refresh throws an error when the existing state is an out of range number"
"CheckComponent page refresh throws an error when the existing state is a negative number"
"CheckComponent page refresh throws an error when the existing state is a string"
"CheckComponent page refresh throws an error when the existing state is a bool"
"CheckComponent page refresh canDeactivate can deactivate on warmup intro view state"
"CheckComponent page refresh canDeactivate can deactivate on submission pending view state"
"CheckComponent page refresh canDeactivate can deactivate on preload view state to allow out of time rendering"
"CheckComponent page refresh canDeactivate can deactivate on submission pending view state"
"CheckComponent page refresh canDeactivate cannot deactivate on any other state"
"ConnectivityCheckGuard should instantiate"
"ConnectivityCheckGuard when the connectivity check enabled flag is enabled should redirect to connectivity check page"
"ConnectivityCheckGuard when the connectivity check enabled flag is disabled should redirect to sign in page"
"ConnectivityCheckComponent should create"
"ConnectivityCheckComponent ngOnInit should navigate to check path with query params if an unfinished check is detected"
"ConnectivityCheckComponent ngOnInit should not navigate to check path if a completed check is detected"
"ConnectivityCheckComponent ngOnInit should navigate to sign in view if connectivity Check succeeded"
"ConnectivityCheckComponent ngOnInit should navigate to connectivity error view if connectivity Check fails"
"ConnectivityErrorComponent should create"
"ContactComponent should create"
"error-handler should be created"
"error-handler handleError calls the audit service to persist the error"
"error-handler handleError does not throw another error"
"FeedbackThanksComponent should be created"
"FeedbackComponent should be created"
"FeedbackComponent should include a H1 header title"
"FeedbackComponent should include three questions"
"FeedbackComponent should include 4 optional answers for InputType field"
"FeedbackComponent should include 5 optional answers for satisfactionRating field"
"FeedbackComponent should include a textarea for commentText field"
"FeedbackComponent should include a submit button"
"FeedbackComponent should initially the submit button be disabled"
"FeedbackComponent should onSelectionChange be called when clicking inputType radio button"
"FeedbackComponent should onSelectionChange be called when clicking satisfactionRate radio button"
"FeedbackComponent should onSubmit be called when clicking button and there are no errors"
"FeedbackComponent should onSubmit NOT be called when clicking button and there are errors"
"FooterComponent should be created"
"FooterComponent should have link with text"
"FooterComponent should have link to external copyright information"
"HeaderComponent should be created"
"HeaderComponent should have text next to the logo"
"HeaderComponent should have a title as a link"
"InstructionsComponent should be created"
"InstructionsComponent redirects to practice questions instructions page"
"InstructionsComponent audit entry adds audit entry onClick for check started"
"LoadingComponent should be created"
"LoadingComponent should add audit entry when loading rendered"
"LoginFailureComponent should be created"
"LoginSuccessComponent should be created and remove pupil data"
"LoginSuccessComponent asks the user to confirm their details"
"LoginSuccessComponent for no access arrangements should redirect to warm up introduction page"
"LoginSuccessComponent for access arrangements should redirect to the AA settings page when fontSize is enabled"
"LoginSuccessComponent for access arrangements should redirect to the AA settings page when audibleSounds is enabled"
"LoginSuccessComponent for access arrangements should redirect to the AA settings page when numpadRemoval is enabled"
"LoginSuccessComponent for access arrangements should redirect to the AA settings page when questionReader is enabled"
"LoginSuccessComponent for access arrangements should redirect to the AA settings page when inputAssistance is enabled"
"LoginComponent should be created"
"LoginComponent should render schoolPin and pupil pin input boxes"
"LoginComponent before login submission should set loginPending to false"
"LoginComponent during login submission should set the loginPending to true"
"LoginComponent on successful login should set the loginPending to false"
"LoginComponent on successful login should initialise the QuestionService and WarmupQuestionService on login"
"LoginComponent on successful login should prevent a second submit"
"LoginComponent on successful login should redirect to success page given a valid schoolPin and pupilPin"
"LoginComponent on successful login should redirect to the font selection page when fontSize is enabled"
"LoginComponent on successful login should redirect to the colour contrast page when colourContrast is enabled"
"LoginComponent should fail logging in when PIN(s) are invalid changes the loginPending to be false"
"LoginComponent should fail logging in when PIN(s) are invalid redirects to login page when the school and pupil pin credentials are rejected"
"LoginComponent redirects to sign in fail page when there is no connection redirects to an error page when the connection fails"
"LoginComponent ngOnInit should set the loginPending to false"
"LoginComponent ngOnInit should navigate to check path with query params if an unfinished check is detected"
"LoginComponent ngOnInit should not navigate to check path if a completed check is detected"
"LogoutComponent should be created"
"LogoutComponent should have signed out of the user service"
"LogoutComponent should navigate to the sign-in page"
"OutOfTimeComponent should be created"
"OutOfTimeComponent should logout the user"
"PageModificationsComponent should create"
"PageModificationsComponent should set the font-size"
"PageVisibility should create"
"PageVisibility #unloadNotification should call auditService addEntry when check state is not detected"
"PageVisibility #unloadNotification should not call auditService addEntry when check state is detected"
"PageVisibility #visibilityChange should call auditService addEntry with AppHidden as audit entry if visibility is visible"
"PageVisibility #visibilityChange should call auditService addEntry with AppHidden as audit entry if visibility is hidden"
"PractiseQuestionComponent should create"
"PractiseQuestionComponent initialises the remaining time"
"PractiseQuestionComponent starts the timers"
"PractiseQuestionComponent hasAnswer returns true for a proper answer"
"PractiseQuestionComponent hasAnswer returns false for an empty answer"
"PractiseQuestionComponent hasStartedAnswering returns false before input was added"
"PractiseQuestionComponent hasStartedAnswering returns true after input was added"
"PractiseQuestionComponent hasStartedAnswering returns true after input was added and deleted"
"PractiseQuestionComponent onClickAnswer adds the input to the answer if there is room"
"PractiseQuestionComponent onClickAnswer does not add the input to the answer if the answer is 5 chars long"
"PractiseQuestionComponent onClickAnswer does not add input to the answer if enter has been clicked"
"PractiseQuestionComponent onClickBackspace deletes the end character from the answer"
"PractiseQuestionComponent onClickBackspace behaves when the answer is empty"
"PractiseQuestionComponent onSubmit emits the answer"
"PractiseQuestionComponent onSubmit only allows submit to happen once"
"PractiseQuestionComponent onSubmit returns false if the answer is too short"
"PractiseQuestionComponent sendTimeoutEvent emits the answer"
"PractiseQuestionComponent sendTimeoutEvent returns false for a duplicate timeout event"
"PractiseQuestionComponent handleKeyboardEvent adds to the answer when a number is given"
"PractiseQuestionComponent handleKeyboardEvent does not add to the answer after submission"
"PractiseQuestionComponent handleKeyboardEvent does not register key strokes for warm up questions"
"PractiseQuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing Backspace or Delete"
"PractiseQuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing \"Del\""
"PractiseQuestionComponent handleKeyboardEvent keyboard calls OnSubmit() when Enter is pressed (if there is an answer)"
"PractiseQuestionComponent handleKeyboardEvent keyboard accepts numbers"
"PractiseQuestionComponent preSendTimeoutEvent should play the end of question sound"
"PractiseQuestionComponent preSendTimeoutEvent should play the end of question sound after speech ends"
"PrivacyComponent should create"
"QuestionComponent should be created"
"QuestionComponent handleMouseEvent tracks mousedown events"
"QuestionComponent handleMouseEvent does not register additional mouse events if enter has been clicked"
"QuestionComponent handleTouchEvent tracks touch events"
"QuestionComponent handleTouchEvent does not register additional touch events once enter has been pressed"
"QuestionComponent handleKeyboardEvent adds to the answer when a number is given"
"QuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing Backspace or Delete"
"QuestionComponent handleKeyboardEvent keyboard calls deleteChar when pressing \"Del\""
"QuestionComponent handleKeyboardEvent keyboard calls OnSubmit() when Enter is pressed (if there is an answer)"
"QuestionComponent handleKeyboardEvent keyboard accepts numbers"
"QuestionComponent handleKeyboardEvent calls register input service for each keypress"
"QuestionComponent handleKeyboardEvent does not register key strokes after submission"
"QuestionComponent audit entry is added on question rendered"
"QuestionComponent audit entry is added on answer submitted"
"QuestionComponent #onClickAnswer calls registerInputService"
"QuestionComponent #onClickAnswer adds the number to the answer"
"QuestionComponent #onClickAnswer does not add any new chars to the answer once it has been submitted"
"QuestionComponent #onClickAnswer does not add to the input register once it has been submitted"
"QuestionComponent #onClickBackspace calls registerInputService"
"QuestionComponent #onClickBackspace deletes a char from the answer"
"QuestionComponent #onClickBackspace does not delete a char from the answer once it has been submitted"
"QuestionComponent #onClickBackspace does not add to the input register once it has been submitted"
"QuestionComponent #onClickSubmit calls registerInputService"
"QuestionComponent #onClickSubmit calls onSubmit()"
"QuestionComponent #onClickSubmit does not add to the input register once submitted"
"QuestionComponent #onSubmit stores the answer when submit is pressed"
"QuestionComponent #onSubmit stores the answer before it stores the QuestionAnswered Audit"
"QuestionComponent #preSendTimeoutEvent stores the answer"
"QuestionsIntroComponent should create"
"QuestionsIntroComponent onClick() calls check start submit successfully calls check start service"
"QuestionsIntroComponent audit entry is added on WarmupComplete rendered"
"CanExitGuard should instantiate"
"CanExitGuard should return false if component canDeactivate method returns false"
"CanExitGuard should return true if component canDeactivate method returns true"
"LoggedInGuard should instantiate"
"LoggedInGuard should redirect when the user is not signed in"
"LoggedInGuard should return true when the user is signed in"
"AnswerService should be created"
"AnswerService should store answer under unique key"
"AnswerService should create answers object if it does not already exist"
"AppUsageService should be created"
"AppUsageService should fetch the app usage counter value"
"AppUsageService should increment the app usage counter by 1"
"AppUsageService should store the app usage counter"
"AuditService should be created"
"AuditService addEntry should add entry as stringified value"
"AzureQueueService when the production flag is disabled should not try to fallback when failing to send a message"
"AzureQueueService when the production flag is disabled should successfully send a message to the queue"
"AzureQueueService when the production flag is enabled should try to fallback when failing to send a message"
"AzureQueueService when the production flag is enabled should successfully send a message to the queue"
"CheckCompleteService should be created"
"CheckCompleteService submit should call azure queue service successfully, audit successful call and redirect to check complete page"
"CheckCompleteService uses checkComplete token by default"
"CheckCompleteService submit should call azure queue service service unsuccessfully, audit failure\n    and redirect to submission failed page"
"CheckCompleteService submit should call azure queue service service when sas token has expired and redirect to session expiry page"
"CheckCompleteService submit should return if the app is configured to run in practice mode"
"CheckCompleteService getAllEntriesByKey stores all items in the corresponding key based category based on timestamp order"
"CheckCompleteService getPayload stores all items in the corresponding key based category based on timestamp order"
"CheckStartService should be created"
"CheckStartService submit should call azure queue service successfully and audit successful call"
"CheckStartService submit should call azure queue service service unsuccessfully and audit failure"
"CheckStatusService should be created"
"CheckStatusService #hasUnfinishedCheck should return true if local storage submission pending entry is true"
"CheckStatusService #hasUnfinishedCheck should return false if local storage is empty"
"CheckStatusService #hasFinishedCheck should return true if local storage submission completed entry is true"
"CheckStatusService #hasFinishedCheck should return false if local storage is empty"
"CompressorService should have a compress method"
"CompressorService should have a decompress method"
"CompressorService the results of compressing and decompressing are equivalent to the input"
"CompressorService Compressor.compress returns a string"
"CompressorService Compressor.decompress returns a string"
"AppConfigService should be created"
"AppConfigService loads data from the config json file"
"AppConfigService throws a server error if the config json file does not exist"
"ConnectivityService should be created"
"ConnectivityService connectivityCheckSucceeded should return true if both pupil api ping and test connectivity queue message creation are successful"
"ConnectivityService connectivityCheckSucceeded should return false if both pupil api ping and test connectivity queue message creation are unsuccessful"
"ConnectivityService connectivityCheckSucceeded should return false if pupil api ping is unsuccessful"
"ConnectivityService connectivityCheckSucceeded should return false if test connectivity queue message creation is unsuccessful"
"ConnectivityService connectivityCheckSucceeded should call generateConnectivityErrorMessage when errorMessages array has been populated"
"ConnectivityService connectivityCheckSucceeded should not call generateConnectivityErrorMessage when errorMessages array is empty"
"DeviceService should be created"
"DeviceService captures device info to localStorage"
"DeviceService isUnsupportedBrowser returns true when browser is IE9"
"DeviceService isUnsupportedBrowser returns true when browser is IE10"
"DeviceService isUnsupportedBrowser returns true when browser is IE11"
"DeviceService isUnsupportedBrowser returns true when browser is Edge version 80.0.361.62"
"DeviceService isUnsupportedBrowser returns true when browser is Firefox 74"
"DeviceService isUnsupportedBrowser returns true when browser is Safari 605.1.15"
"DeviceService isUnsupportedBrowser returns true when browser is Chrome version 80.0.3987.149"
"FeedbackService should be created"
"FeedbackService postFeedback  should call queueSubmit"
"FeedbackService postFeedback  should return if feedback is not fetched before making any call"
"FeedbackService queueSubmit  should call azureQueueService addMessage"
"LoginErrorDiagnosticsService should be created"
"LoginErrorDiagnosticsService process should return if error status code is not 0"
"LoginErrorDiagnosticsService process should call changeMessage when api url refused connection and browser status is online"
"LoginErrorService should be created"
"LoginErrorService should have default observable message value"
"LoginErrorService changeMessage should provide the new value to the BehaviorSubject"
"PupilPrefsService should be created"
"PupilPrefsService storePupilPrefs  should call pupil prefs azure queue storage"
"PupilPrefsService storePupilPrefs  should audit log the error when azureQueueService add Message fails"
"PupilPrefsService loadPupilPrefs should load prefs from local storage access_arrangements key and return"
"PupilPrefsService loadPupilPrefs should load prefs from local storage config key"
"PupilPrefsService loadPupilPrefs should provide defaults if local storage does not provide existing values"
"QuestionService should be created"
"QuestionService getQuestion() returns a Question"
"QuestionService getQuestion() returns a Question"
"QuestionService getQuestion() with an out-of-range parameter throws an error"
"QuestionService getQuestion() with an out-of-range parameter throws an error"
"QuestionService getQuestion() with a non-integer throws an error"
"QuestionService getNumberOfQuestions() returns the correct number of questions"
"QuestionService reset() clears the questions and config"
"QuestionService getCurrentQuestionNumber() returns the current question number"
"WarmupQuestionService should be created"
"WarmupQuestionService should initialise correctly"
"RegisterInputService should be created"
"RegisterInputService StoreEntry will call localstorage and store with a unique key name"
"RegisterInputService StoreEntry to should store entry"
"RegisterInputService StoreEntry will generate new Date if the event timestamp is undefined"
"RegisterInputService AddEntry to call StoreEntry"
"RegisterInputService expects a left click event to be registered"
"RegisterInputService calls the storeEntry method"
"RouteService should be created"
"RouteService should have undefined previous url before navigating twice"
"RouteService should have the correct previous url after naviation"
"SpeechService constructor should be created"
"SpeechService #removeAutoplayRestrictions should remove its event listeners"
"SpeechService #isSupported returns true if the api is supported"
"SpeechService #isSupported returns false if the api is NOT supported"
"SpeechService #speak should have a speak method"
"SpeechService #speak calls the audit service on start and end"
"SpeechService #speakQuestion should have a speakQuestion method"
"SpeechService #speakQuestion calls the audit service on start and end"
"StorageService should be created"
"StorageService setItem adds item to localStorage when key provided"
"StorageService getItem returns JSON item when key provided and item exists"
"StorageService getItem returns string item when key provided and item exists"
"StorageService getItem returns null when key provided and item does not exist"
"StorageService removeItem removes item when key provided and item exists"
"StorageService clear calls localStorage.clear"
"StorageService getKeys returns all keys from localStorage"
"StorageService getAllItems returns all key-value pairs from localStorage in a single object"
"storageKey AnswersStorageKey should create a composite key with a prefix and suffix"
"storageKey InputsStorageKey should create a composite key with a prefix and suffix"
"storageKey SessionStorageKey should create a static key"
"storageKey AuditStorageKey should create a composite key with a prefix and suffix"
"storageKey QuestionsStorageKey should create a static key"
"storageKey ConfigStorageKey should create a static key"
"storageKey PupilStorageKey should create a static key"
"storageKey SchoolStorageKey should create a static key"
"storageKey FeedbackStorageKey should create a static key"
"storageKey CheckStateStorageKey should create a static key"
"storageKey DeviceStorageKey should create a static key"
"storageKey PendingSubmissionStorageKey should create a static key"
"storageKey CompletedSubmissionStorageKey should create a static key"
"storageKey AccessArrangementsStorageKey should create a static key"
"storageKey TokensStorageKey should create a static key"
"storageKey TimeoutStorageKey should create a static key"
"storageKey CheckStartTimeStorageKey should create a static key"
"TimerService should be created"
"TimerService should start the timer and set time remaining"
"TimerService should not start a new timer if already started"
"TimerService should load the timer from local storage"
"TimerService should clear timer from local storage"
"TimerService should stop the timer and clear the interval"
"TimerService should start the timer and emit timeout event"
"TokenService should be created"
"TokenService getToken should fetch the tokens using storage service"
"UserService login should persist response body to storage"
"UserService login should return a promise that rejects on invalid login"
"UserService logout should clear storage on logout"
"WindowRefService should be created"
"SessionExpiredComponent should be created"
"SoundComponent should create"
"SoundComponent has a function to play the end of question sound"
"SoundComponent has a function to play an alert that the time is nearly up"
"SoundComponent should have two audio elements"
"SpokenPracticeQuestionComponent should create"
"SpokenPracticeQuestionComponent should write an audit entry to show the question was rendered"
"SpokenPracticeQuestionComponent should start speaking straight away"
"SpokenPracticeQuestionComponent the timer does not start straight away"
"SpokenPracticeQuestionComponent the timer starts after the speech has ended"
"SpokenPracticeQuestionComponent handleKeyboardEvent does not add to the answer after submission"
"SpokenPracticeQuestionComponent handleKeyboardEvent does not register key strokes for warm up questions"
"SpokenQuestionComponent should create"
"SpokenQuestionComponent starts speaking the question straight away"
"SpokenQuestionComponent the timer does not start straight away"
"SpokenQuestionComponent the timer starts after the speech has ended"
"SpokenQuestionComponent #preSendTimeoutEvent stores the answer"
"SpokenQuestionComponent handleKeyboardEvent does not register key strokes after submission"
"SubmissionFailedComponent should be created"
"SubmissionPendingComponent should be created"
"SubmissionPendingComponent ngOnInit() calls check complete submit method"
"SubmissionPendingComponent ngOnInit() provides an appropriate title when a previous check is detected though a URL param"
"WarmupCompleteComponent should be created"
"WarmupCompleteComponent emits onClick()"
"WarmupCompleteComponent audit entry is added on WarmupComplete rendered"
"WarmupIntroComponent should be created"
"WarmupIntroComponent emits onClick()"
"WarmupIntroComponent audit entry is added on WarmupIntro rendered"
"WarmupLoadingComponent should create"
"WebsiteOfflineComponent should create"
